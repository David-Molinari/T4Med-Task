[{"/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/index.js":"1","/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/reportWebVitals.js":"2","/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/App.js":"3","/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/components/Graph/index.js":"4","/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/components/Nav/index.js":"5","/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/components/Graph/GraphUtils.js":"6","/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/jquery-loader.js":"7","/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/components/Modal/index.js":"8","/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/Utils.js":"9"},{"size":825,"mtime":1624310538912,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1623178143641,"results":"12","hashOfConfig":"11"},{"size":1854,"mtime":1624310703721,"results":"13","hashOfConfig":"11"},{"size":4802,"mtime":1624310312717,"results":"14","hashOfConfig":"11"},{"size":2139,"mtime":1624310714048,"results":"15","hashOfConfig":"11"},{"size":16021,"mtime":1624310346276,"results":"16","hashOfConfig":"11"},{"size":54,"mtime":1623263624978,"results":"17","hashOfConfig":"11"},{"size":2934,"mtime":1623691071679,"results":"18","hashOfConfig":"11"},{"size":441,"mtime":1624310459963,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r9bm59",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/index.js",[],"/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/reportWebVitals.js",[],"/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/App.js",["40"],"/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/components/Graph/index.js",["41","42","43","44","45"],"/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/components/Nav/index.js",[],"/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/components/Graph/GraphUtils.js",["46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65"],"/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/jquery-loader.js",[],"/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/components/Modal/index.js",["66","67"],"import React, { useState, useEffect } from \"react\";\nimport './Modal.css';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport { hexToRgbA } from '../../Utils';\n\nfunction ModalComp(props) {\n\n    const toggle = () => props.setModal({...props.modal, open: false});\n\n    const [color, setColor] = useState(\"\")\n\n    // When the modal state variable is updated,\n    // if open is set to true, add the appropriate\n    // background color to the modal\n    useEffect(()=> {\n        if (props.modal.open == true) {\n            let gRs = props.glucoseRanges\n            let gL0 = props.modal.data.glucoseLevelNum\n            for (let i = 0; i < gRs.length; i++) {\n                if (gL0 >= gRs[i][0] && gL0 <= gRs[i][1]) {\n                    setColor(hexToRgbA(gRs[i][2], .15))\n                }\n            }\n        }\n    }, [props.modal])\n\n    return (\n        <Modal isOpen={props.modal.open} className=\"Modal\">\n            <ModalHeader \n                id=\"ModalHeader\" \n                toggle={toggle}\n                style={{color: color}}\n            >\n                Glucose Reading\n            </ModalHeader>\n            <ModalBody \n                className=\"ModalBody\"\n                style={{backgroundColor: color}}\n            >\n                <div className=\"ModalBodyInnerCont\">\n                    <div \n                        id=\"ModalBodyTopRow\"\n                        className=\"ModalRow\"\n                    >\n                        <h3 className=\"ModalLabel\">\n                            Glucose Level:\n                        </h3>\n                        <h5 className=\"ModalEntry\">\n                            {props.modal.data.glucoseLevel}\n                        </h5>\n                    </div>\n                    <div className=\"ModalRow\">\n                        <h3 className=\"ModalLabel\">\n                            Result Date:\n                        </h3>\n                        <h5 className=\"ModalEntry\">\n                            {props.modal.data.resultDate}\n                        </h5>\n                    </div>\n                    <div className=\"ModalRow\">\n                        <h3 className=\"ModalLabel\">\n                            Source:\n                        </h3>\n                        <h5 className=\"ModalEntry\">\n                            {props.modal.data.source}\n                        </h5>\n                    </div>\n                    <div className=\"ModalRow\">\n                        <h3 className=\"ModalLabel\">\n                            Result ID:\n                        </h3>\n                        <h5 \n                            id=\"ResultIdEntry\"\n                            className=\"ModalEntry\"\n                        >\n                            {props.modal.data.resultId}\n                        </h5>\n                    </div>\n                </div>\n            </ModalBody>\n        </Modal>\n    )\n}\n\nexport default ModalComp;",["68","69"],"/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/Utils.js",["70","71"],{"ruleId":"72","severity":1,"message":"73","line":57,"column":6,"nodeType":"74","endLine":57,"endColumn":12,"suggestions":"75"},{"ruleId":"76","severity":1,"message":"77","line":24,"column":12,"nodeType":"78","messageId":"79","endLine":24,"endColumn":17},{"ruleId":"80","severity":1,"message":"81","line":38,"column":29,"nodeType":"82","messageId":"83","endLine":38,"endColumn":31},{"ruleId":"84","severity":1,"message":"85","line":108,"column":42,"nodeType":"86","messageId":"87","endLine":108,"endColumn":44},{"ruleId":"80","severity":1,"message":"81","line":114,"column":37,"nodeType":"82","messageId":"83","endLine":114,"endColumn":39},{"ruleId":"80","severity":1,"message":"81","line":116,"column":44,"nodeType":"82","messageId":"83","endLine":116,"endColumn":46},{"ruleId":"80","severity":1,"message":"88","line":35,"column":33,"nodeType":"82","messageId":"83","endLine":35,"endColumn":35},{"ruleId":"80","severity":1,"message":"81","line":100,"column":24,"nodeType":"82","messageId":"83","endLine":100,"endColumn":26},{"ruleId":"80","severity":1,"message":"81","line":105,"column":42,"nodeType":"82","messageId":"83","endLine":105,"endColumn":44},{"ruleId":"80","severity":1,"message":"81","line":113,"column":40,"nodeType":"82","messageId":"83","endLine":113,"endColumn":42},{"ruleId":"80","severity":1,"message":"81","line":161,"column":24,"nodeType":"82","messageId":"83","endLine":161,"endColumn":26},{"ruleId":"80","severity":1,"message":"81","line":166,"column":42,"nodeType":"82","messageId":"83","endLine":166,"endColumn":44},{"ruleId":"80","severity":1,"message":"81","line":174,"column":40,"nodeType":"82","messageId":"83","endLine":174,"endColumn":42},{"ruleId":"80","severity":1,"message":"88","line":223,"column":23,"nodeType":"82","messageId":"83","endLine":223,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":233,"column":24,"nodeType":"82","messageId":"83","endLine":233,"endColumn":26},{"ruleId":"80","severity":1,"message":"81","line":233,"column":46,"nodeType":"82","messageId":"83","endLine":233,"endColumn":48},{"ruleId":"80","severity":1,"message":"81","line":256,"column":25,"nodeType":"82","messageId":"83","endLine":256,"endColumn":27},{"ruleId":"80","severity":1,"message":"81","line":256,"column":48,"nodeType":"82","messageId":"83","endLine":256,"endColumn":50},{"ruleId":"80","severity":1,"message":"81","line":267,"column":29,"nodeType":"82","messageId":"83","endLine":267,"endColumn":31},{"ruleId":"80","severity":1,"message":"81","line":277,"column":21,"nodeType":"82","messageId":"83","endLine":277,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":287,"column":26,"nodeType":"82","messageId":"83","endLine":287,"endColumn":28},{"ruleId":"80","severity":1,"message":"81","line":297,"column":26,"nodeType":"82","messageId":"83","endLine":297,"endColumn":28},{"ruleId":"80","severity":1,"message":"81","line":321,"column":23,"nodeType":"82","messageId":"83","endLine":321,"endColumn":25},{"ruleId":"80","severity":1,"message":"81","line":321,"column":41,"nodeType":"82","messageId":"83","endLine":321,"endColumn":43},{"ruleId":"80","severity":1,"message":"81","line":355,"column":39,"nodeType":"82","messageId":"83","endLine":355,"endColumn":41},{"ruleId":"80","severity":1,"message":"81","line":355,"column":68,"nodeType":"82","messageId":"83","endLine":355,"endColumn":70},{"ruleId":"80","severity":1,"message":"81","line":16,"column":30,"nodeType":"82","messageId":"83","endLine":16,"endColumn":32},{"ruleId":"72","severity":1,"message":"89","line":25,"column":8,"nodeType":"74","endLine":25,"endColumn":21,"suggestions":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"80","severity":1,"message":"88","line":2,"column":13,"nodeType":"82","messageId":"83","endLine":2,"endColumn":15},{"ruleId":"80","severity":1,"message":"81","line":6,"column":24,"nodeType":"82","messageId":"83","endLine":6,"endColumn":26},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loading'. Either include it or remove the dependency array.","ArrayExpression",["95"],"no-unused-vars","'ready' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'props.glucoseRanges'. Either include it or remove the dependency array.",["96"],"no-native-reassign",["97"],"no-negated-in-lhs",["98"],{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [data, loading]",{"range":"103","text":"104"},"Update the dependencies array to be: [props.glucoseRanges, props.modal]",{"range":"105","text":"106"},[1381,1387],"[data, loading]",[833,846],"[props.glucoseRanges, props.modal]"]