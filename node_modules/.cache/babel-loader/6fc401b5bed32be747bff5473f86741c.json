{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addLabels;\n\nfunction buildFont(_ref) {\n  var family = _ref.family,\n      size = _ref.size,\n      style = _ref.style,\n      variant = _ref.variant,\n      weight = _ref.weight;\n  return style + ' ' + variant + ' ' + weight + ' ' + size + ' \\'' + family + '\\'';\n}\n\nfunction addLabels(chart, options) {\n  if (!options.yaxis || !options.yaxis.toRight) {\n    return;\n  }\n\n  var chartCanvas = chart.getCanvas();\n  var chartWidth = chartCanvas.width;\n  var ctx = chartCanvas.getContext('2d'); // get the context\n\n  var allSeries = chart.getData(); // get your series data\n\n  var xaxis = chart.getXAxes()[0]; // xAxis\n\n  var yaxis = chart.getYAxes()[0]; // yAxis\n\n  var offset = chart.getPlotOffset(); // plots offset\n\n  ctx.font = buildFont(options.yaxis.font);\n  ctx.fillStyle = options.yaxis.font.color;\n  allSeries.forEach(function (series, index) {\n    var dataPoint = series.datapoints.points; // one point per series\n\n    var x = dataPoint[0];\n    var y = dataPoint[1];\n    var text = series.yaxis.options.ticks[index][1];\n    var metrics = ctx.measureText(text);\n    var overlap = chartWidth < xaxis.p2c(x) + metrics.width;\n    var xPos = overlap ? xaxis.p2c(x) + offset.left - metrics.width - 10 : // place at end of bar\n    xaxis.p2c(x) + offset.left + 10; // place after the bar\n\n    var yPos = yaxis.p2c(y) + offset.top + options.yaxis.labelPadding;\n    ctx.fillText(text, xPos, yPos);\n  });\n}","map":{"version":3,"sources":["/Users/Dmolina5/Desktop/T4Med-Task/t4med-task/node_modules/react-flot/lib/add-labels.js"],"names":["Object","defineProperty","exports","value","default","addLabels","buildFont","_ref","family","size","style","variant","weight","chart","options","yaxis","toRight","chartCanvas","getCanvas","chartWidth","width","ctx","getContext","allSeries","getData","xaxis","getXAxes","getYAxes","offset","getPlotOffset","font","fillStyle","color","forEach","series","index","dataPoint","datapoints","points","x","y","text","ticks","metrics","measureText","overlap","p2c","xPos","left","yPos","top","labelPadding","fillText"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addLabels;\nfunction buildFont(_ref) {\n  var family = _ref.family,\n      size = _ref.size,\n      style = _ref.style,\n      variant = _ref.variant,\n      weight = _ref.weight;\n\n  return style + ' ' + variant + ' ' + weight + ' ' + size + ' \\'' + family + '\\'';\n}\n\nfunction addLabels(chart, options) {\n  if (!options.yaxis || !options.yaxis.toRight) {\n    return;\n  }\n\n  var chartCanvas = chart.getCanvas();\n  var chartWidth = chartCanvas.width;\n  var ctx = chartCanvas.getContext('2d'); // get the context\n  var allSeries = chart.getData(); // get your series data\n  var xaxis = chart.getXAxes()[0]; // xAxis\n  var yaxis = chart.getYAxes()[0]; // yAxis\n  var offset = chart.getPlotOffset(); // plots offset\n  ctx.font = buildFont(options.yaxis.font);\n  ctx.fillStyle = options.yaxis.font.color;\n\n  allSeries.forEach(function (series, index) {\n    var dataPoint = series.datapoints.points; // one point per series\n    var x = dataPoint[0];\n    var y = dataPoint[1];\n    var text = series.yaxis.options.ticks[index][1];\n    var metrics = ctx.measureText(text);\n\n    var overlap = chartWidth < xaxis.p2c(x) + metrics.width;\n    var xPos = overlap ? xaxis.p2c(x) + offset.left - metrics.width - 10 : // place at end of bar\n    xaxis.p2c(x) + offset.left + 10; // place after the bar\n    var yPos = yaxis.p2c(y) + offset.top + options.yaxis.labelPadding;\n    ctx.fillText(text, xPos, yPos);\n  });\n}"]},"metadata":{},"sourceType":"script"}