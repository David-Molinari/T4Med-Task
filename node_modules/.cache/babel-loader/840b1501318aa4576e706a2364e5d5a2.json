{"ast":null,"code":"var _jsxFileName = \"/Users/Dmolina5/Desktop/T4Med-Task/t4med-task/src/components/Nav/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Nav.css';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, FormGroup, Label } from 'reactstrap';\nimport DatePicker from 'reactstrap-date-picker';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Navigation(props) {\n  _s();\n\n  const [collapsed, setCollapsed] = useState(true);\n\n  const toggleNavbar = () => setCollapsed(!collapsed);\n\n  const handleChange = data => {\n    props.setSelectedDates({ ...props.selectedDates,\n      start: data\n    });\n  };\n\n  let minDate = moment(props.glucoseData[0].result_dt_tm).format();\n  let maxDate = props.selectedDates.end;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"NavContainer\",\n    children: /*#__PURE__*/_jsxDEV(Navbar, {\n      id: \"Navbar\",\n      children: [/*#__PURE__*/_jsxDEV(NavbarBrand, {\n        href: \"/\",\n        className: \"mr-auto\",\n        children: \"T4Med - Glucose Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NavbarToggler, {\n        onClick: toggleNavbar,\n        className: \"mr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        isOpen: !collapsed,\n        navbar: true,\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            dateFormat: \"DD/M/YYYY\",\n            value: props.selectedDates.start,\n            onChange: data => handleChange(data),\n            minDate: minDate,\n            maxDate: maxDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Navigation, \"v9q8u3mX6e8FrJZVev9WfYlHYUo=\");\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["/Users/Dmolina5/Desktop/T4Med-Task/t4med-task/src/components/Nav/index.js"],"names":["React","useState","Collapse","Navbar","NavbarToggler","NavbarBrand","FormGroup","Label","DatePicker","moment","Navigation","props","collapsed","setCollapsed","toggleNavbar","handleChange","data","setSelectedDates","selectedDates","start","minDate","glucoseData","result_dt_tm","format","maxDate","end"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,aAA3B,EAA0CC,WAA1C,EAAuDC,SAAvD,EAAkEC,KAAlE,QAA+E,YAA/E;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;;AAEA,QAAMa,YAAY,GAAG,MAAMD,YAAY,CAAC,CAACD,SAAF,CAAvC;;AAEA,QAAMG,YAAY,GAAIC,IAAD,IAAU;AAC3BL,IAAAA,KAAK,CAACM,gBAAN,CAAuB,EAAC,GAAGN,KAAK,CAACO,aAAV;AAAyBC,MAAAA,KAAK,EAAEH;AAAhC,KAAvB;AACH,GAFD;;AAIA,MAAII,OAAO,GAAGX,MAAM,CAACE,KAAK,CAACU,WAAN,CAAkB,CAAlB,EAAqBC,YAAtB,CAAN,CAA0CC,MAA1C,EAAd;AACA,MAAIC,OAAO,GAAGb,KAAK,CAACO,aAAN,CAAoBO,GAAlC;AAEA,sBACE;AAAK,IAAA,EAAE,EAAC,cAAR;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEX,YAAxB;AAAsC,QAAA,SAAS,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,QAAD;AAAU,QAAA,MAAM,EAAE,CAACF,SAAnB;AAA8B,QAAA,MAAM,MAApC;AAAA,+BACE,QAAC,SAAD;AAAA,kCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,UAAD;AACI,YAAA,UAAU,EAAC,WADf;AAEI,YAAA,KAAK,EAAED,KAAK,CAACO,aAAN,CAAoBC,KAF/B;AAGI,YAAA,QAAQ,EAAGH,IAAD,IAAQD,YAAY,CAACC,IAAD,CAHlC;AAII,YAAA,OAAO,EAAEI,OAJb;AAKI,YAAA,OAAO,EAAEI;AALb;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBH;;GAhCQd,U;;KAAAA,U;AAkCT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport './Nav.css';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, FormGroup, Label } from 'reactstrap';\nimport DatePicker from 'reactstrap-date-picker';\nimport moment from 'moment';\n\n\nfunction Navigation(props) {\n    const [collapsed, setCollapsed] = useState(true);\n\n    const toggleNavbar = () => setCollapsed(!collapsed);\n\n    const handleChange = (data) => {\n        props.setSelectedDates({...props.selectedDates, start: data})\n    }\n\n    let minDate = moment(props.glucoseData[0].result_dt_tm).format()\n    let maxDate = props.selectedDates.end\n  \n    return (\n      <div id=\"NavContainer\">\n        <Navbar id=\"Navbar\">\n          <NavbarBrand href=\"/\" className=\"mr-auto\">T4Med - Glucose Data</NavbarBrand>\n          <NavbarToggler onClick={toggleNavbar} className=\"mr-2\" />\n          <Collapse isOpen={!collapsed} navbar>\n            <FormGroup>\n                <Label>Start</Label>\n                <DatePicker\n                    dateFormat='DD/M/YYYY'\n                    value={props.selectedDates.start}\n                    onChange={(data)=>handleChange(data)}\n                    minDate={minDate}\n                    maxDate={maxDate}\n                />\n            </FormGroup>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n}\n\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}