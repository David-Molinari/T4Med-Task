{"ast":null,"code":"var _jsxFileName = \"/Users/Dmolina5/Desktop/T4Med-Task/t4med-task/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport axios from \"axios\";\nimport Nav from \"./components/Nav\";\nimport Graph from \"./components/Graph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [glucoseData, setGlucoseData] = useState([]);\n  const [glucoseRanges, setGlucoseRanges] = useState([]);\n  const [selectedDates, setSelectedDates] = useState({\n    start: \"\",\n    end: \"\"\n  });\n  useEffect(() => {\n    axios.get(`https://caiken.dev.transformativemed.com/david-skills-test/data.php`).then(res => {\n      console.log(res.data);\n      setGlucoseData(res.data.glucose_data);\n      setGlucoseRanges(res.data.glucose_ranges);\n      let startDT = glucoseData[0].result_dt_tm;\n      let startD = startDT.slice(0, startDT.search(\" \"));\n      let endDT = glucoseData[glucoseData.length - 1].result_dt_tm;\n      let endD = endDT.slice(0, endDT.search(\" \"));\n      setSelectedDates({\n        start: startD,\n        end: endD\n      });\n      console.log(endD, startD, selectedDates);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      props: (selectedDates, setSelectedDates)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QKJ+KQ/JjKyRSXlCDqB0of7dkVw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Dmolina5/Desktop/T4Med-Task/t4med-task/src/App.js"],"names":["React","useEffect","useState","axios","Nav","Graph","App","glucoseData","setGlucoseData","glucoseRanges","setGlucoseRanges","selectedDates","setSelectedDates","start","end","get","then","res","console","log","data","glucose_data","glucose_ranges","startDT","result_dt_tm","startD","slice","search","endDT","length","endD"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC;AACjDW,IAAAA,KAAK,EAAE,EAD0C;AAEjDC,IAAAA,GAAG,EAAE;AAF4C,GAAD,CAAlD;AAKAb,EAAAA,SAAS,CAAC,MAAK;AACbE,IAAAA,KAAK,CAACY,GAAN,CAAW,qEAAX,EACGC,IADH,CACQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAZ,MAAAA,cAAc,CAACS,GAAG,CAACG,IAAJ,CAASC,YAAV,CAAd;AACAX,MAAAA,gBAAgB,CAACO,GAAG,CAACG,IAAJ,CAASE,cAAV,CAAhB;AACA,UAAIC,OAAO,GAAGhB,WAAW,CAAC,CAAD,CAAX,CAAeiB,YAA7B;AACA,UAAIC,MAAM,GAAGF,OAAO,CAACG,KAAR,CAAc,CAAd,EAAiBH,OAAO,CAACI,MAAR,CAAe,GAAf,CAAjB,CAAb;AACA,UAAIC,KAAK,GAAGrB,WAAW,CAACA,WAAW,CAACsB,MAAZ,GAAqB,CAAtB,CAAX,CAAoCL,YAAhD;AACA,UAAIM,IAAI,GAAGF,KAAK,CAACF,KAAN,CAAY,CAAZ,EAAeE,KAAK,CAACD,MAAN,CAAa,GAAb,CAAf,CAAX;AACAf,MAAAA,gBAAgB,CAAC;AACfC,QAAAA,KAAK,EAAEY,MADQ;AAEfX,QAAAA,GAAG,EAAEgB;AAFU,OAAD,CAAhB;AAIAZ,MAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ,EAAkBL,MAAlB,EAA0Bd,aAA1B;AACD,KAdH;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,KAAK,GAAEA,aAAa,EAAEC,gBAAjB;AAAV;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAjCQN,G;;KAAAA,G;AAmCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport axios from \"axios\";\nimport Nav from \"./components/Nav\";\nimport Graph from \"./components/Graph\";\n\n\nfunction App() {\n\n  const [glucoseData, setGlucoseData] = useState([])\n  const [glucoseRanges, setGlucoseRanges] = useState([])\n  const [selectedDates, setSelectedDates] = useState({\n    start: \"\",\n    end: \"\"\n  })\n\n  useEffect(()=> {\n    axios.get(`https://caiken.dev.transformativemed.com/david-skills-test/data.php`)\n      .then(res => {\n        console.log(res.data)\n        setGlucoseData(res.data.glucose_data)\n        setGlucoseRanges(res.data.glucose_ranges)\n        let startDT = glucoseData[0].result_dt_tm\n        let startD = startDT.slice(0, startDT.search(\" \"))\n        let endDT = glucoseData[glucoseData.length - 1].result_dt_tm\n        let endD = endDT.slice(0, endDT.search(\" \"))\n        setSelectedDates({\n          start: startD,\n          end: endD\n        })\n        console.log(endD, startD, selectedDates)\n      })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Nav props={selectedDates, setSelectedDates}/>\n      <Graph/>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}