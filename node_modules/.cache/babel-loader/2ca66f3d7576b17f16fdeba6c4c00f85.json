{"ast":null,"code":"var _jsxFileName = \"/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/App.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Nav from \"./components/Nav\";\nimport Graph from \"./components/Graph\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [glucoseData, setGlucoseData] = useState([]);\n  const [glucoseRanges, setGlucoseRanges] = useState([]);\n  const [selectedDates, setSelectedDates] = useState({\n    start: \"\",\n    end: \"\"\n  }); // Fetch glucose data on app mount, and set initial state\n\n  const GET_RANGES_AND_DATA = gql`\n    query GetRangesAndData {\n      ranges {\n        low_bound\n        high_bound\n        color\n      }\n      data {\n        result_id\n        result_dt_tm\n        glucose_level\n        glucose_level_unit\n        source\n      }\n    }\n  `;\n  useEffect(_s(() => {\n    _s();\n\n    const {\n      loading,\n      error,\n      rangesData\n    } = useQuery(GET_RANGES_AND_DATA); // axios.get(`https://caiken.dev.transformativemed.com/david-skills-test/data.php`)\n    //   .then(res => {\n    //     console.log(res.data)\n\n    console.log(rangesData); // let data = res.data\n    // setGlucoseData(data.glucose_data)\n    // setGlucoseRanges(data.glucose_ranges)\n    // let startDT = data.glucose_data[0].result_dt_tm\n    // let startD = moment(startDT.slice(0, startDT.search(\" \"))).format()\n    // let endDT = data.glucose_data[data.glucose_data.length - 1].result_dt_tm\n    // let endD = moment(endDT.slice(0, endDT.search(\" \"))).format()\n    // setSelectedDates({\n    //   start: startD,\n    //   end: endD\n    // })\n    // })\n  }, \"wCccFsrGypbdS6gw7yk+zwrrx9Y=\", false, function () {\n    return [useQuery];\n  }), []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: glucoseData.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        selectedDates: selectedDates,\n        setSelectedDates: setSelectedDates,\n        glucoseData: glucoseData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Graph, {\n        selectedDates: selectedDates,\n        glucoseData: glucoseData,\n        glucoseRanges: glucoseRanges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"Loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s2(App, \"QKJ+KQ/JjKyRSXlCDqB0of7dkVw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Dmolina5/Desktop/glucose-reader-app/glucose-reader-fe/src/App.js"],"names":["React","useEffect","useState","axios","moment","Nav","Graph","useQuery","gql","App","glucoseData","setGlucoseData","glucoseRanges","setGlucoseRanges","selectedDates","setSelectedDates","start","end","GET_RANGES_AND_DATA","loading","error","rangesData","console","log","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SACEC,QADF,EAEEC,GAFF,QAGO,gBAHP;;;;AAKA,SAASC,GAAT,GAAe;AAAA;;AAAA;;AAEb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC;AACjDc,IAAAA,KAAK,EAAE,EAD0C;AAEjDC,IAAAA,GAAG,EAAE;AAF4C,GAAD,CAAlD,CAJa,CASb;;AACA,QAAMC,mBAAmB,GAAGV,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAfE;AAgBAP,EAAAA,SAAS,IAAC,MAAK;AAAA;;AACb,UAAM;AAAEkB,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,QAAiCd,QAAQ,CAACW,mBAAD,CAA/C,CADa,CAEb;AACA;AACA;;AACII,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ,EALS,CAMT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF;AACH,GAlBQ;AAAA,YACgCd,QADhC;AAAA,MAkBN,EAlBM,CAAT;AAoBA,sBACE;AAAA,cACGG,WAAW,CAACc,MAAZ,gBACC;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,aAAa,EAAEV,aAApB;AAAmC,QAAA,gBAAgB,EAAEC,gBAArD;AAAuE,QAAA,WAAW,EAAEL;AAApF;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,aAAa,EAAEI,aAAtB;AAAqC,QAAA,WAAW,EAAEJ,WAAlD;AAA+D,QAAA,aAAa,EAAEE;AAA9E;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAMD;AAAI,MAAA,EAAE,EAAC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF,mBADF;AAaD;;IA3DQH,G;;KAAAA,G;AA6DT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Nav from \"./components/Nav\";\nimport Graph from \"./components/Graph\";\nimport {\n  useQuery,\n  gql\n} from \"@apollo/client\";\n\nfunction App() {\n\n  const [glucoseData, setGlucoseData] = useState([])\n  const [glucoseRanges, setGlucoseRanges] = useState([])\n  const [selectedDates, setSelectedDates] = useState({\n    start: \"\",\n    end: \"\"\n  })\n\n  // Fetch glucose data on app mount, and set initial state\n  const GET_RANGES_AND_DATA = gql`\n    query GetRangesAndData {\n      ranges {\n        low_bound\n        high_bound\n        color\n      }\n      data {\n        result_id\n        result_dt_tm\n        glucose_level\n        glucose_level_unit\n        source\n      }\n    }\n  `;\n  useEffect(()=> {\n    const { loading, error, rangesData } = useQuery(GET_RANGES_AND_DATA);\n    // axios.get(`https://caiken.dev.transformativemed.com/david-skills-test/data.php`)\n    //   .then(res => {\n    //     console.log(res.data)\n        console.log(rangesData)\n        // let data = res.data\n        // setGlucoseData(data.glucose_data)\n        // setGlucoseRanges(data.glucose_ranges)\n        // let startDT = data.glucose_data[0].result_dt_tm\n        // let startD = moment(startDT.slice(0, startDT.search(\" \"))).format()\n        // let endDT = data.glucose_data[data.glucose_data.length - 1].result_dt_tm\n        // let endD = moment(endDT.slice(0, endDT.search(\" \"))).format()\n        // setSelectedDates({\n        //   start: startD,\n        //   end: endD\n        // })\n      // })\n  }, [])\n\n  return (\n    <>\n      {glucoseData.length ? \n        <div className=\"App\">\n          <Nav selectedDates={selectedDates} setSelectedDates={setSelectedDates} glucoseData={glucoseData}/>\n          <Graph selectedDates={selectedDates} glucoseData={glucoseData} glucoseRanges={glucoseRanges}/>\n        </div>\n      : \n      <h1 id=\"Loading\">\n        Loading...\n      </h1>}\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}