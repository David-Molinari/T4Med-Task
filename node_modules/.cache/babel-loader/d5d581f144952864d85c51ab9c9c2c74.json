{"ast":null,"code":"var _jsxFileName = \"/Users/Dmolina5/Desktop/T4Med-Task/t4med-task/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport axios from \"axios\";\nimport Nav from \"./components/Nav\";\nimport Graph from \"./components/Graph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [glucoseData, setGlucoseData] = useState([]);\n  const [glucoseRanges, setGlucoseRanges] = useState([]);\n  const [selectedDates, setSelectedDates] = useState({\n    start: \"\",\n    end: \"\"\n  });\n  useEffect(() => {\n    axios.get(`https://caiken.dev.transformativemed.com/david-skills-test/data.php`).then(res => {\n      let data = res.data;\n      setGlucoseData(data.glucose_data);\n      setGlucoseRanges(data.glucose_ranges);\n      let startDT = data.glucose_data[0].result_dt_tm;\n      let endDT = data.glucose_data[data.glucose_data.length - 1].result_dt_tm;\n      setSelectedDates({\n        start: startDT,\n        end: endDT\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: glucoseData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        selectedDates: selectedDates,\n        setSelectedDates: setSelectedDates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Graph, {\n        selectedDates: selectedDates,\n        glucosData: glucoseData,\n        glucoseRanges: glucoseRanges\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"QKJ+KQ/JjKyRSXlCDqB0of7dkVw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Dmolina5/Desktop/T4Med-Task/t4med-task/src/App.js"],"names":["React","useEffect","useState","axios","Nav","Graph","App","glucoseData","setGlucoseData","glucoseRanges","setGlucoseRanges","selectedDates","setSelectedDates","start","end","get","then","res","data","glucose_data","glucose_ranges","startDT","result_dt_tm","endDT","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC;AACjDW,IAAAA,KAAK,EAAE,EAD0C;AAEjDC,IAAAA,GAAG,EAAE;AAF4C,GAAD,CAAlD;AAKAb,EAAAA,SAAS,CAAC,MAAK;AACbE,IAAAA,KAAK,CAACY,GAAN,CAAW,qEAAX,EACGC,IADH,CACQC,GAAG,IAAI;AACX,UAAIC,IAAI,GAAGD,GAAG,CAACC,IAAf;AACAV,MAAAA,cAAc,CAACU,IAAI,CAACC,YAAN,CAAd;AACAT,MAAAA,gBAAgB,CAACQ,IAAI,CAACE,cAAN,CAAhB;AACA,UAAIC,OAAO,GAAGH,IAAI,CAACC,YAAL,CAAkB,CAAlB,EAAqBG,YAAnC;AACA,UAAIC,KAAK,GAAGL,IAAI,CAACC,YAAL,CAAkBD,IAAI,CAACC,YAAL,CAAkBK,MAAlB,GAA2B,CAA7C,EAAgDF,YAA5D;AACAV,MAAAA,gBAAgB,CAAC;AACfC,QAAAA,KAAK,EAAEQ,OADQ;AAEfP,QAAAA,GAAG,EAAES;AAFU,OAAD,CAAhB;AAID,KAXH;AAYD,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE;AAAA,cACGhB,WAAW,gBACV;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,aAAa,EAAEI,aAApB;AAAmC,QAAA,gBAAgB,EAAEC;AAArD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,aAAa,EAAED,aAAtB;AAAqC,QAAA,UAAU,EAAEJ,WAAjD;AAA8D,QAAA,aAAa,EAAEE;AAA7E;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADU,gBAKV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ,mBADF;AAUD;;GAlCQH,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './App.css';\nimport axios from \"axios\";\nimport Nav from \"./components/Nav\";\nimport Graph from \"./components/Graph\";\n\n\nfunction App() {\n\n  const [glucoseData, setGlucoseData] = useState([])\n  const [glucoseRanges, setGlucoseRanges] = useState([])\n  const [selectedDates, setSelectedDates] = useState({\n    start: \"\",\n    end: \"\"\n  })\n\n  useEffect(()=> {\n    axios.get(`https://caiken.dev.transformativemed.com/david-skills-test/data.php`)\n      .then(res => {\n        let data = res.data\n        setGlucoseData(data.glucose_data)\n        setGlucoseRanges(data.glucose_ranges)\n        let startDT = data.glucose_data[0].result_dt_tm\n        let endDT = data.glucose_data[data.glucose_data.length - 1].result_dt_tm\n        setSelectedDates({\n          start: startDT,\n          end: endDT\n        })\n      })\n  }, [])\n\n  return (\n    <>\n      {glucoseData ? \n        <div className=\"App\">\n          <Nav selectedDates={selectedDates} setSelectedDates={setSelectedDates}/>\n          <Graph selectedDates={selectedDates} glucosData={glucoseData} glucoseRanges={glucoseRanges}/>\n        </div>\n      : <p>Loading...</p>}\n    </>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}