{"ast":null,"code":"var _jsxFileName = \"/Users/Dmolina5/Desktop/T4Med-Task/t4med-task/src/components/Graph/index.js\";\nimport React, { useEffect } from \"react\";\nimport './Graph.css';\nimport '../../jquery-loader';\nimport ReactFlot from \"react-flot\";\nimport '../../../node_modules/react-flot/flot/jquery.flot.time.min';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Graph(props) {\n  console.log(props);\n  const data = [{\n    label: \"chart\",\n    data: [[0, 3], [4, 8], [8, 5], [9, 13]],\n    // color: \"red\",\n    series: {\n      lines: {\n        show: true,\n        fill: true,\n        fillColor: \"rgba(255, 255, 255, 0.8)\"\n      }\n    }\n  }];\n  let ticks = [[0, \"00:00\"]];\n\n  for (let i = 2; i < 25; i = i + 2) {\n    if (i < 10) {\n      ticks.push([i, `0${i}:00`]);\n    } else {\n      ticks.push([i, `${i}:00`]);\n    }\n  }\n\n  const options = {\n    xaxis: {\n      min: 0,\n      max: 24,\n      mode: \"time\",\n      timeformat: \"%H:%M\",\n      ticks: ticks\n    },\n    yaxis: {\n      min: 0,\n      max: 350,\n      ticks: [100, 180]\n    },\n    series: {\n      lines: {\n        show: true\n      },\n      points: {\n        show: true\n      }\n    },\n    markings: [{\n      yaxis: {\n        from: 0,\n        to: 5\n      },\n      color: \"#D40702\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ReactFlot, {\n    id: \"product-chart\",\n    data: data,\n    options: options,\n    width: \"100%\",\n    height: \"250px\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/Users/Dmolina5/Desktop/T4Med-Task/t4med-task/src/components/Graph/index.js"],"names":["React","useEffect","ReactFlot","Graph","props","console","log","data","label","series","lines","show","fill","fillColor","ticks","i","push","options","xaxis","min","max","mode","timeformat","yaxis","points","markings","from","to","color"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP;AACA,OAAO,qBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,4DAAP;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAElBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAMG,IAAI,GAAG,CAAC;AACVC,IAAAA,KAAK,EAAE,OADG;AAEVD,IAAAA,IAAI,EAAE,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAAS,CAAC,CAAD,EAAI,CAAJ,CAAT,EAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB,EAAyB,CAAC,CAAD,EAAI,EAAJ,CAAzB,CAFI;AAGV;AACAE,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,IAAI,EAAE,IAApB;AAA0BC,QAAAA,SAAS,EAAE;AAArC;AADH;AAJE,GAAD,CAAb;AASA,MAAIC,KAAK,GAAG,CAAC,CAAC,CAAD,EAAG,OAAH,CAAD,CAAZ;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,GAAGA,CAAC,GAAG,CAAhC,EAAmC;AAC/B,QAAIA,CAAC,GAAG,EAAR,EAAY;AACRD,MAAAA,KAAK,CAACE,IAAN,CAAW,CAACD,CAAD,EAAK,IAAGA,CAAE,KAAV,CAAX;AACH,KAFD,MAEO;AACHD,MAAAA,KAAK,CAACE,IAAN,CAAW,CAACD,CAAD,EAAK,GAAEA,CAAE,KAAT,CAAX;AACH;AACJ;;AAED,QAAME,OAAO,GAAG;AACZC,IAAAA,KAAK,EAAE;AACHC,MAAAA,GAAG,EAAE,CADF;AAEHC,MAAAA,GAAG,EAAE,EAFF;AAGHC,MAAAA,IAAI,EAAE,MAHH;AAIHC,MAAAA,UAAU,EAAE,OAJT;AAKHR,MAAAA,KAAK,EAAEA;AALJ,KADK;AAQZS,IAAAA,KAAK,EAAE;AACHJ,MAAAA,GAAG,EAAE,CADF;AAEHC,MAAAA,GAAG,EAAE,GAFF;AAGHN,MAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN;AAHJ,KARK;AAaZL,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OADH;AAEJa,MAAAA,MAAM,EAAE;AAAEb,QAAAA,IAAI,EAAE;AAAR;AAFJ,KAbI;AAiBZc,IAAAA,QAAQ,EAAE,CACN;AACAF,MAAAA,KAAK,EAAE;AAAEG,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,EAAE,EAAE;AAAf,OADP;AAEAC,MAAAA,KAAK,EAAE;AAFP,KADM;AAjBE,GAAhB;AAwBA,sBACI,QAAC,SAAD;AAAW,IAAA,EAAE,EAAC,eAAd;AAA8B,IAAA,IAAI,EAAErB,IAApC;AAA0C,IAAA,OAAO,EAAEU,OAAnD;AAA4D,IAAA,KAAK,EAAC,MAAlE;AAAyE,IAAA,MAAM,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;;KAnDQd,K;AAqDT,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport './Graph.css';\nimport '../../jquery-loader';\nimport ReactFlot from \"react-flot\";\nimport '../../../node_modules/react-flot/flot/jquery.flot.time.min';\n\nfunction Graph(props) {\n    \n    console.log(props)\n\n    const data = [{\n        label: \"chart\",\n        data: [[0, 3], [4, 8], [8, 5], [9, 13]],\n        // color: \"red\",\n        series: {\n            lines: { show: true, fill: true, fillColor: \"rgba(255, 255, 255, 0.8)\" }\n        }\n    }];\n\n    let ticks = [[0,\"00:00\"]]\n\n    for (let i = 2; i < 25; i = i + 2) {\n        if (i < 10) {\n            ticks.push([i, `0${i}:00`])\n        } else {\n            ticks.push([i, `${i}:00`]) \n        }\n    }\n\n    const options = {\n        xaxis: {\n            min: 0, \n            max: 24, \n            mode: \"time\", \n            timeformat: \"%H:%M\",\n            ticks: ticks\n        }, \n        yaxis: {\n            min: 0, \n            max: 350,\n            ticks: [100, 180]\n        },\n        series: {\n            lines: { show: true },\n            points: { show: true }\n        },\n        markings: [\n            { \n            yaxis: { from: 0, to: 5 }, \n            color: \"#D40702\" }, \n        ]\n    }\n\n    return (\n        <ReactFlot id=\"product-chart\" data={data} options={options} width=\"100%\" height=\"250px\" />\n      );\n\n}\n\nexport default Graph;"]},"metadata":{},"sourceType":"module"}